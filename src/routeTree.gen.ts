/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoDemoStartServerFuncsRouteImport } from './routes/demo/demo.start.server-funcs'
import { Route as DemoDemoStartApiRequestRouteImport } from './routes/demo/demo.start.api-request'
import { ServerRoute as DemoApiDemoNamesServerRouteImport } from './routes/demo/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDemoStartServerFuncsRoute =
  DemoDemoStartServerFuncsRouteImport.update({
    id: '/demo/demo/start/server-funcs',
    path: '/demo/demo/start/server-funcs',
    getParentRoute: () => rootRouteImport,
  } as any)
const DemoDemoStartApiRequestRoute = DemoDemoStartApiRequestRouteImport.update({
  id: '/demo/demo/start/api-request',
  path: '/demo/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoApiDemoNamesServerRoute = DemoApiDemoNamesServerRouteImport.update({
  id: '/demo/api/demo-names',
  path: '/demo/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/demo/start/api-request': typeof DemoDemoStartApiRequestRoute
  '/demo/demo/start/server-funcs': typeof DemoDemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/demo/start/api-request': typeof DemoDemoStartApiRequestRoute
  '/demo/demo/start/server-funcs': typeof DemoDemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/demo/start/api-request': typeof DemoDemoStartApiRequestRoute
  '/demo/demo/start/server-funcs': typeof DemoDemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/demo/start/api-request'
    | '/demo/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/demo/demo/start/api-request' | '/demo/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/demo/demo/start/api-request'
    | '/demo/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoDemoStartApiRequestRoute: typeof DemoDemoStartApiRequestRoute
  DemoDemoStartServerFuncsRoute: typeof DemoDemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/demo/api/demo-names': typeof DemoApiDemoNamesServerRoute
}
export interface FileServerRoutesByTo {
  '/demo/api/demo-names': typeof DemoApiDemoNamesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/demo/api/demo-names': typeof DemoApiDemoNamesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/demo/api/demo-names'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/demo/api/demo-names'
  id: '__root__' | '/demo/api/demo-names'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  DemoApiDemoNamesServerRoute: typeof DemoApiDemoNamesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/demo/start/server-funcs': {
      id: '/demo/demo/start/server-funcs'
      path: '/demo/demo/start/server-funcs'
      fullPath: '/demo/demo/start/server-funcs'
      preLoaderRoute: typeof DemoDemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/demo/start/api-request': {
      id: '/demo/demo/start/api-request'
      path: '/demo/demo/start/api-request'
      fullPath: '/demo/demo/start/api-request'
      preLoaderRoute: typeof DemoDemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/demo/api/demo-names': {
      id: '/demo/api/demo-names'
      path: '/demo/api/demo-names'
      fullPath: '/demo/api/demo-names'
      preLoaderRoute: typeof DemoApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoDemoStartApiRequestRoute: DemoDemoStartApiRequestRoute,
  DemoDemoStartServerFuncsRoute: DemoDemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  DemoApiDemoNamesServerRoute: DemoApiDemoNamesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
